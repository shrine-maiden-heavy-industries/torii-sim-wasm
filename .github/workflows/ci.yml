name: 'Torii WASM Simulation Engine'
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/ci.yml'
      - 'python/**'
      - 'src/**'
      - 'noxfile.py'
      - 'pyproject.toml'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

env:
  TOOL_PYTHON_VERSION: '3.11'

jobs:
  lint-torii-sim-wasm:
    runs-on: ubuntu-latest
    name: 'Lint Torii WASM Simulation Engine'
    steps:
      - name: 'Setup Python (${{ env.TOOL_PYTHON_VERSION }})'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.TOOL_PYTHON_VERSION }}

      - name: 'Setup Rust'
        shell: bash
        run: |
          rustup update

      - name: 'Initialize Environment'
        shell: bash
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          echo "$HOME/.local/bin:$PATH" >> $GITHUB_PATH
          echo "GITHUB_WORKSPACE=\"`pwd`\"" >> $GITHUB_ENV

      - name: 'Install Dependencies'
        shell: bash
        run: |
          python -m pip install --user --upgrade pip nox

      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 'Install uv'
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false

      - name: 'Run Clippy'
        shell: bash
        run: |
          cargo clippy

      - name: 'Run Style Lint'
        shell: bash
        run: |
          nox -s lint

      - name: 'Run Type Checking'
        shell: bash
        continue-on-error: true
        run: |
          nox -s typecheck-mypy
          nox -s typecheck-pyright

  test-torii-sim-wasm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.11', '3.12', '3.13' ]
        allow-failure:
          - false
        include:
          - python-version: '3.14-dev'
            allow-failure: true
          - python-version: 'pypy3.11'
            allow-failure: true

    name: 'Test Torii WASM Simulation Engine (Python: ${{ matrix.python-version }})'
    continue-on-error: ${{ matrix.allow-failure }}
    steps:
      - name: 'Setup Python (${{ env.TOOL_PYTHON_VERSION }})'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.TOOL_PYTHON_VERSION }}

      - name: 'Setup Rust'
        shell: bash
        run: |
          rustup update

      - name: 'Initialize Environment'
        shell: bash
        env:
          WORKSPACE: ${{ github.workspace }}
        run: |
          echo "$HOME/.local/bin:$PATH" >> $GITHUB_PATH
          echo "GITHUB_WORKSPACE=\"`pwd`\"" >> $GITHUB_ENV

      - name: 'Install Dependencies'
        shell: bash
        run: |
          python -m pip install --user --upgrade pip nox maturin

      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 'Install uv'
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false

      - name: 'Run Tests'
        shell: bash
        run: |
          nox -s test

      - name: 'Codecov Upload'
        if: success() && github.repository == 'shrine-maiden-heavy-industries/torii-sim-wasm'
        uses: codecov/codecov-action@v5
        with:
          verbose: true
          files: ./build/tests/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  build-checkpoint:
    name: 'Torii WASM Simulation Engine build Checkpoint (Meta Job)'
    needs:
      - lint-torii-sim-wasm
      - test-torii-sim-wasm
    runs-on: ubuntu-latest
    steps:
      - run: ${{ contains(needs.*.result, 'failure') && 'false' || 'true' }}

  build-linux:
    runs-on: ${{ matrix.platform.runner }}
    needs:
      - build-checkpoint
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: ppc64le

    name: 'Build Torii WASM Simulation Engine (${{ matrix.platform.runner }} ${{ matrix.platform.target }})'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 'Setup Python (${{ env.TOOL_PYTHON_VERSION }})'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.TOOL_PYTHON_VERSION }}

      - name: 'Build wheels'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto

      - name: 'Upload wheels'
        if: success() && github.repository == 'shrine-maiden-heavy-industries/torii-sim-wasm' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, 'dev')
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  build-musllinux:
    runs-on: ${{ matrix.platform.runner }}
    needs:
      - build-checkpoint
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7

    name: 'Build Torii WASM Simulation Engine musl (${{ matrix.platform.runner }} ${{ matrix.platform.target }})'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 'Setup Python (${{ env.TOOL_PYTHON_VERSION }})'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.TOOL_PYTHON_VERSION }}

      - name: 'Build wheels'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2

      - name: 'Upload wheels'
        if: success() && github.repository == 'shrine-maiden-heavy-industries/torii-sim-wasm' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, 'dev')
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  build-windows:
    runs-on: ${{ matrix.platform.runner }}
    needs:
      - build-checkpoint
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86

    name: 'Build Torii WASM Simulation Engine (${{ matrix.platform.runner }} ${{ matrix.platform.target }})'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 'Setup Python (${{ env.TOOL_PYTHON_VERSION }})'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.TOOL_PYTHON_VERSION }}
          architecture: ${{ matrix.platform.target }}

      - name: 'Build wheels'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: 'Upload wheels'
        if: success() && github.repository == 'shrine-maiden-heavy-industries/torii-sim-wasm' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, 'dev')
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  build-macos:
    runs-on: ${{ matrix.platform.runner }}
    needs:
      - build-checkpoint
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64

    name: 'Build Torii WASM Simulation Engine (${{ matrix.platform.runner }} ${{ matrix.platform.target }})'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 'Setup Python (${{ env.TOOL_PYTHON_VERSION }})'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.TOOL_PYTHON_VERSION }}

      - name: 'Build wheels'
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: 'Upload wheels'
        if: success() && github.repository == 'shrine-maiden-heavy-industries/torii-sim-wasm' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, 'dev')
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  build-sdist:
    runs-on: ubuntu-latest
    needs:
      - build-checkpoint
    name: 'Build Source Dist'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 'Setup Python (${{ env.TOOL_PYTHON_VERSION }})'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.TOOL_PYTHON_VERSION }}

      - name: 'Build sdist'
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: 'Upload sdist'
        if: success() && github.repository == 'shrine-maiden-heavy-industries/torii-sim-wasm' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, 'dev')
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  ci-checkpoint:
    name: 'Torii WASM Simulation Engine CI Checkpoint (Meta Job)'
    needs:
      - build-checkpoint
      - build-linux
      - build-musllinux
      - build-windows
      - build-macos
      - build-sdist
    runs-on: ubuntu-latest
    steps:
      - run: ${{ contains(needs.*.result, 'failure') && 'false' || 'true' }}

  publish-pypi:
    name: 'Torii WASM Simulation Engine - Publish PyPI package'
    if: github.repository == 'shrine-maiden-heavy-industries/torii-sim-wasm' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, 'dev')
    needs:
      - ci-checkpoint
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      attestations: write

    steps:
      - name: 'Download built wheels'
        uses: actions/download-artifact@v4

      - name: 'Generate artifact attestation'
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'

      - name: 'Publish to PyPI'
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
